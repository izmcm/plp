{ 
	var bigintA = bigint:62 ,
	var bigintB = bigint:12 ,
	var bigintC = bigint:2 ,
	var intD = 3 ,
	var bigfractionE = bigfrac:8/4,
	var negativeBigIntF = bigint:-2,
	var negativeBigIntG = bigint:-12,

	proc soma ()  {
		write("bigintA + bigintB:");
		write(bigintA + bigintB);
		write("bigintA + intD:");
		write(bigintA + intD);
		write("bigintA + bigfractionE");
		write(bigintA + bigfractionE);
		write("negativeBigIntF + negativeBigIntG");
		write(negativeBigIntF + negativeBigIntG)
	},

	proc mul ()  {
		write("bigintA * bigintB:");
		write(bigintA * bigintB);
		write("bigintA * intD:");
		write(bigintA * intD);
		write("bigintA * bigfractionE");
		write(bigintA * bigfractionE);
		write("negativeBigIntF * negativeBigIntG");
		write(negativeBigIntF * negativeBigIntG)
	},

	proc div ()  {
		write("bigintA / bigintB:");
		write(bigintA / bigintB);
		write("bigintA / intD:");
		write(bigintA / intD);
		write("bigintA / bigfractionE");
		write(bigintA / bigfractionE);
		write("negativeBigIntF / negativeBigIntG");
		write(negativeBigIntF / negativeBigIntG)
	},

	proc sub ()  {
		write("bigintA - bigintB:");
		write(bigintA - bigintB);
		write("bigintA - intD:");
		write(bigintA - intD);
		write("bigintA - bigfractionE");
		write(bigintA - bigfractionE);
		write("negativeBigIntF - negativeBigIntG");
		write(negativeBigIntF - negativeBigIntG)
	};

	call soma();
	call mul();
	call div();
	call sub()
}