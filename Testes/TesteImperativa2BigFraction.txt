{ 
	var bigfractionA = bigfrac:62/12 ,
	var bigintB = bigint:12 ,
	var bigintC = bigint:2 ,
	var intD = 3 ,
	var bigfractionE = bigfrac:8/4,
	var negativeBigIntF = bigfrac:-2/-10,
	var negativeBigIntG = bigfrac:-12/2,

	proc soma ()  {
		write("bigfractionA + bigintB:");
		write(bigfractionA + bigintB);
		write("bigfractionA + intD:");
		write(bigfractionA + intD);
		write("bigfractionA + bigfractionE");
		write(bigfractionA + bigfractionE);
		write("negativeBigIntF + negativeBigIntG");
		write(negativeBigIntF + negativeBigIntG)
	},

	proc mul ()  {
		write("bigfractionA * bigintB:");
		write(bigfractionA * bigintB);
		write("bigfractionA * intD:");
		write(bigfractionA * intD);
		write("bigfractionA * bigfractionE");
		write(bigfractionA * bigfractionE);
		write("negativeBigIntF * negativeBigIntG");
		write(negativeBigIntF * negativeBigIntG)
	},

	proc div ()  {
		write("bigfractionA / bigintB:");
		write(bigfractionA / bigintB);
		write("bigfractionA / intD:");
		write(bigfractionA / intD);
		write("bigfractionA / bigfractionE");
		write(bigfractionA / bigfractionE);
		write("negativeBigIntF / negativeBigIntG");
		write(negativeBigIntF / negativeBigIntG)
	},

	proc sub ()  {
		write("bigfractionA - bigintB:");
		write(bigfractionA - bigintB);
		write("bigfractionA - intD:");
		write(bigfractionA - intD);
		write("bigfractionA - bigfractionE");
		write(bigfractionA - bigfractionE);
		write("negativeBigIntF - negativeBigIntG");
		write(negativeBigIntF - negativeBigIntG)
	};

	call soma();
	call mul();
	call div();
	call sub()
}